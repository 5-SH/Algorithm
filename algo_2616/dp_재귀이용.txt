7
35 40 50 10 30 45 60
2

28
35 40 50 10 30 45 60 35 40 50 10 30 45 60 35 40 50 10 30 45 60 35 40 50 10 30 45 60
3




#include <iostream>
#include <algorithm>
#include <string.h>
#include <math.h>

using namespace std;
int dp[4][50001];
int train[50001];
int trainNum, carryNum;

int findAns(int countNum, int carNum, int start) {
    int &ret = dp[countNum][carNum];
    if (ret != 0) return ret;
    if (countNum == 3) return dp[0][carNum];
    int endIter = trainNum - carryNum * (3 - countNum);
    for (int i = start; i <= endIter; i++) {
        ret = max(ret, findAns(countNum + 1, i, start + carryNum) + dp[0][carNum]);
    }
    return dp[countNum][carNum];
}

int main()
{
    int ans = 0;
    cin >> trainNum;

    for (int i = 0; i < trainNum; i++)
        scanf("%d", &train[i]);
    cin >> carryNum;

    for (int i = 0; i <= trainNum - carryNum; i++)
        for (int j = i; j < i + carryNum; j++)
            dp[0][i] += train[j];

    cout << findAns(1, 0, carryNum) << endl;

    return 0;
}
